{
  "comments": [
    {
      "key": {
        "uuid": "8da7e022_4b320501",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-08-27T11:54:34Z",
      "side": 1,
      "message": "This change is not only adding an UiAction for deleting a project, but it is also adding a REST endpoint for deleting projects. Having the REST endpoint alone is already very valueable, which makes me think that it might make sense to split this change into two changes:\n\n  1. Add REST endpoint for deleting projects\n  2. Add an UiAction for deleting projects\n\nThis splitting makes especially sense since 2. depends on some other changes in Gerrit core, while 1. could be submitted immediately. At least I would expect that the REST endpoint is mentioned in the commit message and that also documentation for it is included into the plugin documentation. Also it might make sense to seperate both aspects in the implementation, e.g. the class UiDeleteAction implements the REST endpoint for deleting projects, but from the class name this was unexpected to me as the REST endpoint has nothing to do with UI.",
      "revId": "3653514e82e7d1f0f063cc047b6533e371db934b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8da7e022_ab5d6924",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-08-27T12:08:30Z",
      "side": 1,
      "message": "Welcome in the world of UiActions ;-) It is intentionally not splittable by design: once UiActions are supported on a screen, like it is the currently the case on CS2, every UiAction for RevisionResource and CHangeResource and ChangeResource is immediately shown on the screen, given that\n\n* Description.isEnabled(rsrc)\n* Description.isVisible(rsrc)\n\nare returning true for that action.\n\nI do agree, that the new REST endpoint should be mentioned in the plugin documentation. I missed that part.",
      "parentUuid": "8da7e022_4b320501",
      "revId": "3653514e82e7d1f0f063cc047b6533e371db934b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adaae4e9_6c4c3b73",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-08-27T13:10:47Z",
      "side": 1,
      "message": "I don\u0027t understand why this is not splittable.\n\nYou can implement the REST endpoint in an own class, let\u0027s say DeleteProject (to stay consistent with the naming of REST classes in Gerrit core). This class implments RestModifyView and basically contains the apply method and the Input class that you are currently having in UiDeleteAction. UiDeleteAction would then extend the DeleteProject class and add the implementation of UiAction. This is a clear seperation and each steps can be implemented in an own change.",
      "parentUuid": "8da7e022_ab5d6924",
      "revId": "3653514e82e7d1f0f063cc047b6533e371db934b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adaae4e9_ac80e34c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-08-27T13:24:28Z",
      "side": 1,
      "message": "Yes you are right. Never thought about this.\n\nTBH we don\u0027t need to split it. What for? Take that plugin with this change, without merging the dependent changes mention below and the REST endpoint would just work.\n\nOnce the dependent changes are merged, the new \"Delete\" action would appear on the \"Project Info Screen\".",
      "parentUuid": "adaae4e9_6c4c3b73",
      "revId": "3653514e82e7d1f0f063cc047b6533e371db934b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adaae4e9_ec8aeb6a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-08-27T13:34:10Z",
      "side": 1,
      "message": "Sure, we don\u0027t need to, but we always try to keep changes small and try to focus in one change on one thing only. This is what helps most to make reviews easier and faster. In this case it would also help to keep the code cleaner/better understandable. It also has other advantages, when it comes to the usage of git cherry-pick or git revert. If you couple both features in one commit they are also coupled later for cherry-pick or revert if this is later needed for one of two features. This is just my two cents on it, since it is a plugin I\u0027ll not insist on it.",
      "parentUuid": "adaae4e9_ac80e34c",
      "revId": "3653514e82e7d1f0f063cc047b6533e371db934b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d5440b2_23494a62",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2013-08-27T12:37:57Z",
      "side": 1,
      "message": "Sorry, I seem to have messed up the commit message with my last edit.",
      "revId": "3653514e82e7d1f0f063cc047b6533e371db934b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}